#!/usr/bin/env bash
set -e

get_packages_to_remove () {
    tmp=$(mktemp)
    echo "$1" > "$tmp"
    deborphan --guess-all --keep-file="$tmp"
    deborphan --guess-all --find-config --keep-file="$tmp"
    rm "$tmp"
}

ensure_aptitude () {
    if ask_to_install_if_not_found aptitude
    then
        sudo apt-get install aptitude
    fi
}

command=$1
shift || return 0
case "$command" in

    desc)
        ensure_aptitude
        package=$1
        desc=$(aptitude show "$package" | grep '^Description: ')
        echo "${desc:13:120}"
        ;;

    diff)
        ensure_aptitude
        diff=$(comm -23 <(aptitude search '?installed !?automatic' -F '%p' | sort) <(echo "$@" | sort))
        echo "$diff"
        ;;

    install)
        ensure_aptitude
        sudo aptitude install "$@"
        ;;

    sync)
        ensure_aptitude
        packages=$(printf '%s\n' "$@" | sort | uniq)
        already_installed=$(aptitude search '?installed' -F '%p' | sort)
        readarray -t not_installed < <(comm -23 <(echo "$packages") <(echo "$already_installed"))
        if [[ "${#not_installed[@]}" -gt 0 ]]
        then
            available=$(aptitude search '!?installed' -F '%p' | sort)
            readarray -t not_found < <(comm -23 <(printf '%s\n' "${not_installed[@]}") <(echo "$available"))
            [[ "${#not_found[@]}" == 0 ]] || error "Packages not found: ${not_found[*]}"
            readarray -t to_install < <(comm -12 <(printf '%s\n' "${not_installed[@]}") <(echo "$available"))
            [[ "${#to_install[@]}" == 0 ]] || sudo aptitude install "${to_install[@]}"
        fi
        if command -v deborphan >/dev/null 2>/dev/null
        then
            readarray -t to_remove < <(get_packages_to_remove "$packages")
            if [[ "${#to_remove[@]}" -gt 0 ]]
            then
                readarray -t to_remove < <(sudo apt-get -qq -s purge "${to_remove[@]}" 2>/dev/null | cut -f2 -d ' ')
                [[ "${#to_remove[@]}" == 0 ]] || sudo aptitude purge "${to_remove[@]}" || true
            fi
        fi
        ;;

    uninstall)
        ensure_aptitude
        sudo aptitude purge "$@"
        ;;

    update)
        ensure_aptitude
        sudo apt-get -q install "$@"
        ;;

    *)
        error_and_exit "Module does not support this command"
        ;;

esac

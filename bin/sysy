#!/usr/bin/env bash
set -e

if ! command -v realpath >/dev/null 2>/dev/null
then
    echo "Could not find realpath executable" 1>&2
    sudo apt-get install coreutils
fi

if ! command -v diff >/dev/null 2>/dev/null
then
    echo "Could not find diff executable" 1>&2
    sudo apt-get install diffutils
fi

confdir=$HOME/.sysy.d
sysypath=$(realpath "$confdir/bin/..")
tagsfile=$confdir/tags
tagspath=$(realpath "$sysypath/tags")

# shellcheck source=/home/sven/sync/sysy/scripts/include.sh
source "$sysypath/scripts/include.sh"

command=$1
shift || true
case "$command" in

    bootstrap)
        mkdir -p "$confdir"
        ensure_link "$sysypath/bin" "$confdir/bin"
        touch "$confdir/tags"
        if ask_user "Edit tags now?" "y" && open_in_editor "$confdir/tags"
        then
            info "Invoking pre-bootstrap scripts..."
            while IFS= read -r tag
            do
                script=$tagspath/$tag/pre-bootstrap.sh
                [ -f "$script" ] && SYSYPATH=$sysypath bash "$script"
            done < "$tagsfile"

            info "Syncing system configuration..."
            bash "$sysypath/bin/cosy" sync
            info "Bootstrapping packages..."
            bash "$sysypath/bin/pasy" bootstrap
            info "Syncing packages..."
            bash "$sysypath/bin/pasy" sync
            info "Syncing dotfiles..."
            bash "$sysypath/bin/dosy" sync

            info "Invoking post-bootstrap scripts..."
            while IFS= read -r tag
            do
                script=$tagspath/$tag/post-bootstrap.sh
                [ -f "$script" ] && SYSYPATH=$sysypath bash "$script"
            done < "$tagsfile"
        else
            info "Please run $0 sync again after editing"
        fi
        ;;

    serversync)
        serversfile=$confdir/servers
        if [[ -f "$serversfile" ]]
        then
            while IFS= read -r server
            do
                info "Syncing $server..."
                ssh -o LogLevel=QUIET -t "$server" "source \$HOME/.profile && \$HOME/.sysy.d/bin/sysy update && \$HOME/.sysy.d/bin/sysy sync" < /dev/tty || {
                    ret=$?
                    if [[ "$ret" == 255 ]]
                    then
                        exit 255
                    fi
                }
            done < "$serversfile"
        fi
        ;;

    sync)
        info "Syncing system configuration..."
        bash "$sysypath/bin/cosy" sync
        info "Syncing packages..."
        bash "$sysypath/bin/pasy" sync
        info "Syncing dotfiles..."
        bash "$sysypath/bin/dosy" sync
        ;;

    update)
        reposfile=$confdir/repos
        if [[ -f "$reposfile" ]]
        then
            while IFS= read -r repo
            do
                d=$(realpath "$sysypath/$repo")
                info "Updating $d..."
                if ! (git -C "$d" pull >/dev/null && \
                        git -C "$d" submodule update --init --recursive >/dev/null)
                then
                    echo -e "${COLOR_RED}Update of $d failed${COLOR_CLEAR}" 1>&2
                fi
            done < "$reposfile"
        fi
        ;;

    *)
        cat <<EOF
sysy - system synchronization

Usage:

    $0 COMMAND

Commands:

    bootstrap                   bootstrap
    serversync                  synchronize servers
    sync                        synchronize
    update                      update git repositories

EOF
        exit 1
        ;;

esac

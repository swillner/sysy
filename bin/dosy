#!/usr/bin/env bash
set -e
confdir=$HOME/.sysy.d
sysypath=$(dirname "$(dirname "$(realpath "$0")")")
tagsfile=$confdir/tags
tagspath=$(realpath "$sysypath/tags")

# shellcheck source=/dev/null
source "$sysypath/scripts/include.sh"

add_custom_file () {
    local tag=$1
    local file=$2
    local custom_file=$3
    local filespath=$tagspath/$tag/files
    local absolute_custom_file=$filespath/$custom_file
    mkdir -p "$(dirname "$absolute_custom_file")"
    mv "$file" "$absolute_custom_file"
    ln -s "$(realpath "$absolute_custom_file")" "$file"
    local custompath=$tagspath/$tag/custom
    local relative_file
    relative_file=$(realpath --no-symlinks --relative-base "$HOME" "$file") # absolute path if not under home
    echo "$custom_file;$relative_file" >> "$custompath"
}

find_local_file_tag () {
    local local_file=$1
    while IFS= read -r tag
    do
        this_local_file=$tagspath/$tag/dotfiles/$local_file
        if [[ -e "$this_local_file" ]]
        then
            echo "$tag"
            return
        fi
    done < <(tac "$tagsfile") # read reversely to prioritize later tags in file
}

sync_file () {
    local local_file=$1
    local file=$2
    [[ -e "$local_file" ]] || error_and_exit "$local_file not found"
    if [[ -d "$local_file" && -e "$local_file/.sub" ]]
    then
        [[ ! -L "$file" ]] || error_and_exit "$file is a link"
        mkdir -p "$file"
        for f in $local_file/*
        do
            base=$(basename "$f")
            if [[ "$base" != ".sub" ]]
            then
                sync_file "$f" "$file/$base"
            fi
        done
    else
        ensure_link "$local_file" "$file"
    fi
}

command=$1
shift || true
case "$command" in

    add)
        tag=$1
        file=$2
        [[ -e "$file" ]] || error_and_exit "Please specify a tag and a file or directory"
        [[ ! -L "$file" ]] || error_and_exit "$file is a symlink"
        custom_file=$3
        if [[ -z "$custom_file" ]]
        then
            file=$(realpath --relative-to "$HOME" "$file")
            [[ "$(dirname "$file")" == "." && "${file:0:1}" == "." && "$file" != "." ]] || error_and_exit "$file is not a dotfile"
            undotted_file=${file:1}
            dotfilespath=$tagspath/$tag/dotfiles
            local_file=$dotfilespath/$undotted_file
            [[ ! -f "$local_file" ]] || error_and_exit "$file is already handled by dosy with tag $tag"
            mkdir -p "$dotfilespath"
            mv "$HOME/$file" "$local_file"
            ln -s "$(realpath "$local_file")" "$HOME/$file"
        else
            add_custom_file "$tag" "$custom_file" "$file"
        fi
        ;;

    sync)
        while IFS= read -r tag
        do
            filespath=$tagspath/$tag/dotfiles
            for local_file in $filespath/*
            do
                if [[ -e "$local_file" ]]
                then
                    relative_local_file=$(realpath --relative-to "$filespath" "$local_file")
                    file=$HOME/.$relative_local_file
                    # make sure to use the tag with the highest priority (unless it is a subfolder to be linked)
                    [[ -e "$local_file/.sub" ]] || local_file=$tagspath/$(find_local_file_tag "$relative_local_file")/dotfiles/$relative_local_file
                    sync_file "$local_file" "$file"
                fi
            done
            custompath=$tagspath/$tag/custom
            if [[ -f "$custompath" ]]
            then
                filespath=$tagspath/$tag/files
                while IFS= read -r line
                do
                    readarray -d ';' -t args <<< "$line;"
                    [[ "${#args[@]}" -eq 3 ]] || error_and_exit "Corrupt line in $custompath"
                    custom_file=${args[0]}
                    file=${args[1]}
                    [[ "${file:0:1}" == "/" ]] || file=$HOME/$file
                    sync_file "$filespath/$custom_file" "$file"
                done < "$custompath"
            fi
        done < "$tagsfile"
        ;;

    unhandle)
        file=$1
        [[ -e "$file" ]] || error_and_exit "Please specify a file or directory"
        local_file=$(realpath --no-symlinks --relative-to "$HOME" "$file")
        [[ "$(dirname "$local_file")" == "." && "${local_file:0:1}" == "." && "$local_file" != "." ]] ||  error_and_exit "$local_file is not a dotfile or not handled by dosy"
        undotted_file=${local_file:1}
        tag=$(find_local_file_tag "$undotted_file")
        [[ -n "$tag" ]] ||  error_and_exit "$local_file not handled by dosy as a dotfile"
        local_file=$tagspath/$tag/dotfiles/$undotted_file
        if [[ "$(realpath "$file")" != "$local_file" ]]
        then
            info "$file not currently synced"
            if ask_user "Delete handle anyway?" "n"
            then
                rm -rfi "$local_file"
            fi
        else
            if ask_user "Also delete file?" "n"
            then
                rm "$file"
                rm -rfi "$local_file"
            else
                rm "$file"
                mv "$local_file" "$file"
            fi
        fi
        ;;

    *)
        cat <<EOF
dosy - dotfile synchronization

Usage:

    $0 COMMAND [ARGUMENTS]

Commands:

    add  TAG FILE [CUSTOMPATH]  add dotfile or custom file to dosy
    sync                        synchronize
    unhandle FILE               remove dotfile from dosy

EOF
        exit 1
        ;;

esac

#!/usr/bin/env bash
set -e
scriptpath=$(dirname "$(realpath "$0")")
confdir=$HOME/.dosy.d
tagsfile=$confdir/tags
tagspath=$scriptpath/../tags

if which icdiff >/dev/null 2>/dev/null
then
    nicediff="icdiff"
else
    nicediff="diff -y"
fi

# shellcheck source=/home/sven/sync/dosy/scripts/include.sh
source "$scriptpath/../scripts/include.sh"

find_local_file () {
    local system_file=$1
    local local_file
    while IFS= read -r tag
    do
        local_file=$tagspath/$tag/system$system_file
        if [ -f "$local_file" ]
        then
            echo "$local_file"
            return
        fi
    done < <(tac "$tagsfile") # read reversely to prioritize later tags in file
}

is_text_file () {
    grep -qI '.' "$1"
}

add_file () {
    sudo -v
    local tag=$1
    local system_file=$2
    if [ ! -f "$system_file" ]
    then
        error "Could not find $system_file"
    fi
    local local_file=$tagspath/$tag/system$system_file
    mkdir -p "$(dirname "$local_file")"
    sudo cat "$system_file" | tee "$local_file"
}

sync_file () {
    sudo -v
    local local_file=$1
    local system_file=$2
    if [ ! -f "$local_file" ]
    then
        error "$local_file not handled by cosy"
    fi
    if sudo ls "$system_file" >/dev/null 2>/dev/null
    then
        if ! sudo diff "$local_file" "$system_file" >/dev/null 2>/dev/null
        then
            sudo "$nicediff" "$local_file" "$system_file" | less -X -F
            if ask_user "Update file?" "y"
            then
                sudo cat "$local_file" | sudo tee "$system_file" >/dev/null
            else
                info "Skipped $system_file"
            fi
        fi
    else
        if is_text_file "$local_file"
        then
            info "New $system_file:"
            less -X -F "$local_file"
        else
            info "New $system_file (binary)"
        fi
        if ask_user "Add file to system?" "y"
        then
            sudo mkdir -p "$(dirname "$system_file")"
            sudo cat "$local_file" | sudo tee "$system_file" >/dev/null
            if ask_user "Make accessible for all?" "y"
            then
                sudo chmod og+rX "$(dirname "$system_file")"
                sudo chmod og+rX "$system_file"
            fi
        else
            info "Skipped $system_file"
        fi
    fi
}

command=$1
shift || true
case "$command" in

    add)
        tag=$1
        system_file=$2
        if [ ! -f "$system_file" ]
        then
            error "Please specify a tag and a system file"
        fi
        add_file "$tag" "$system_file"
        ;;

    edit)
        system_file=$1
        if [ ! -f "$system_file" ]
        then
            error "Please specify a system file"
        fi
        local_file=$(find_local_file "$system_file")
        if [ ! -e "$local_file" ]
        then
            read -r -p "Tag: " tag
            add_file "$tag" "$system_file"
        fi
        if open_in_editor "$local_file"
        then
            sync_file "$local_file" "$system_file"
        fi
        ;;

    sync)
        system_file=$1
        if [ -z "$system_file" ]
        then
            shopt -s globstar nullglob
            while IFS= read -r tag
            do
                filespath=$tagspath/$tag/system
                for local_file in $filespath/**
                do
                    if [ -f "$local_file" ]
                    then
                        local_file=$(realpath --relative-to "$filespath" "$local_file")
                        system_file=/$local_file
                        local_file=$(find_local_file "$system_file") # really find local file with highest priority
                        sync_file "$local_file" "$system_file"
                    fi
                done
            done < "$tagsfile"
        else
            local_file=$(find_local_file "$system_file")
            sync_file "$local_file" "$system_file"
        fi
        ;;

    *)
        cat <<EOF
cosy - system configuration synchronization

Usage:

    $0 COMMAND [ARGUMENTS]

Commands:

    add  TAG FILE  add system file to cosy
    edit FILE      edit system file handled by cosy
    sync [FILE]    synchronize

EOF
        exit 1
        ;;

esac
